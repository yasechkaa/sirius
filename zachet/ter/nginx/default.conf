upstream user-upstream {
   server user-service:80;
}

upstream core-upstream {
   server core-service:80;
}



map $http_x_rpc_method $target_service {
    hostnames;
    user.*      user-upstream;
    default     core-upstream;
}

server {
    listen 80;

    
    location / {
        root /usr/share/nginx/html;
        index index.html;
    }

    location /rpc {
        client_max_body_size 32;
        
        if ($request_method != POST) {
         return 405;
        }

        #limit_except POST {
        #    return 405;
        #}

        if ($http_x_service_account != "service-account") {
            return 401;
        }

        if ($http_x_service_credentials = "") {
            return 401;
        }

        if ($content_type !~* application/json) {
            return 400;
        }

        proxy_pass http://$target_service;
        proxy_set_header Host $host;
        proxy_set_header X-Service-Account $http_x_service_account;
        proxy_set_header X-Service-Credentials $http_x_service_credentials;
        proxy_set_header X-Rpc-Method $http_x_rpc_method;
    }
}
